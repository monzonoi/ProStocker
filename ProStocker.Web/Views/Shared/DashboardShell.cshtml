@model dynamic
@{
    ViewData["Title"] = "ProStocker Dashboard";
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - ProStocker</title>
    <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" rel="stylesheet">
    <style>
        body {
            font-family: 'Orbitron', sans-serif;
            margin: 0;
            padding: 0;
            height: 100vh;
            overflow: hidden;
            background: linear-gradient(135deg, #1a1a2e, #16213e);
            color: #e0e0e0;
        }

        .dashboard-container {
            display: flex;
            height: 100vh;
            width: 100vw;
            transition: all 0.5s ease-in-out;
        }

        .sidebar {
            background: #0f3460;
            padding: 15px;
            transition: all 0.5s ease-in-out;
            overflow: hidden;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
        }

            .sidebar.left {
                width: 250px;
                min-width: 60px;
            }

                .sidebar.left.collapsed {
                    width: 60px;
                }

            .sidebar.top {
                width: 100%;
                height: 70px;
                padding: 10px 20px;
                display: flex;
                align-items: center;
            }

                .sidebar.top.collapsed {
                    height: 50px;
                }

            .sidebar .nav {
                margin: 0;
                padding: 0;
            }

            .sidebar.left .nav {
                flex-direction: column;
            }

            .sidebar.top .nav {
                flex-direction: row;
                align-items: center;
                gap: 20px;
                width: 100%;
            }

            .sidebar .nav-link {
                color: #e94560;
                display: flex;
                align-items: center;
                padding: 10px 15px;
                border-radius: 8px;
                transition: all 0.3s;
                font-size: 1.1rem;
                text-shadow: 0 0 5px rgba(233, 69, 96, 0.5);
                cursor: pointer;
            }

                .sidebar .nav-link:hover {
                    color: #54BAB9;
                    background: rgba(84, 186, 185, 0.1);
                    box-shadow: 0 0 10px rgba(84, 186, 185, 0.3);
                }

            .sidebar.left.collapsed .nav-link span, .sidebar.top.collapsed .nav-link span {
                display: none;
            }

            .sidebar .nav-link i {
                margin-right: 10px;
                font-size: 1.3rem;
            }

        .content {
            flex-grow: 1;
            padding: 20px;
            overflow-y: auto;
        }

        .card {
            background: #16213e;
            border: none;
            border-radius: 15px;
            transition: transform 0.2s;
        }

            .card:hover {
                transform: scale(1.02);
            }

        .btn-neon {
            background: #e94560;
            border: none;
            color: white;
            border-radius: 25px;
            padding: 10px 20px;
            transition: all 0.3s;
            text-shadow: 0 0 5px rgba(233, 69, 96, 0.7);
        }

            .btn-neon:hover {
                background: #54BAB9;
                box-shadow: 0 0 15px rgba(84, 186, 185, 0.7);
            }

        .text-neon {
            font-weight: 700;
            text-shadow: 0 0 10px currentColor;
        }

        .form-select, .form-control {
            background: #0f3460 !important;
            color: #e0e0e0 !important;
            border: 1px solid #54BAB9 !important;
            font-family: 'Orbitron', sans-serif;
        }

        .modal-content {
            background: #16213e;
            color: #e0e0e0;
            border: 1px solid #54BAB9;
        }

        .modal-header, .modal-footer {
            border-color: #54BAB9;
        }
        /* Temas */
        .theme-dark {
            background: linear-gradient(135deg, #1a1a2e, #16213e);
            color: #e0e0e0;
        }

        .theme-neon {
            background: linear-gradient(135deg, #0d1b2a, #1b263b);
            color: #54BAB9;
        }

        .theme-cyber {
            background: linear-gradient(135deg, #2d0036, #4a0073);
            color: #ff00ff;
        }

        .theme-light {
            background: #f5f5f5;
            color: #333;
        }

            .theme-light .sidebar {
                background: #ffffff;
                box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            }

            .theme-light .card {
                background: #ffffff;
                box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            }

            .theme-light .nav-link {
                color: #007bff !important;
                text-shadow: none;
            }

                .theme-light .nav-link:hover {
                    color: #0056b3 !important;
                    background: rgba(0, 123, 255, 0.1);
                    box-shadow: 0 0 10px rgba(0, 123, 255, 0.3);
                }

            .theme-light .form-select, .theme-light .form-control {
                background: #ffffff !important;
                color: #333 !important;
                border: 1px solid #ccc !important;
            }

            .theme-light .btn-neon {
                background: #007bff;
                text-shadow: none;
            }

                .theme-light .btn-neon:hover {
                    background: #0056b3;
                    box-shadow: 0 0 15px rgba(0, 123, 255, 0.7);
                }

            .theme-light .modal-content {
                background: #ffffff;
                color: #333;
                border: 1px solid #ccc;
            }
    </style>
</head>
<body>
    <div class="dashboard-container" id="dashboardContainer">
        <!-- Menú -->
        <nav class="sidebar left" id="sidebar">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <div class="brand">
                    <span class="text-neon" style="color: #e94560; font-size: 1.5rem;">ProStocker</span>
                    <i class="fas fa-rocket text-neon" style="color: #e94560; font-size: 1.5rem; display: none;"></i>
                </div>
                <button class="btn btn-link text-light" onclick="toggleSidebar()"><i class="fas fa-bars"></i></button>
            </div>
            <ul class="nav">
                <li class="nav-item"><a class="nav-link" onclick="loadContent('/Dashboard/Index')"><i class="fas fa-tachometer-alt"></i><span>Dashboard</span></a></li>
                <li class="nav-item"><a class="nav-link" onclick="loadContent('/Pos/Index')"><i class="fas fa-cash-register"></i><span>POS</span></a></li>
                @if (User.IsInRole("Admin"))
                {
                    <li class="nav-item"><a class="nav-link" onclick="loadContent('/Articulos/Index')"><i class="fas fa-box"></i><span>Artículos</span></a></li>
                    <li class="nav-item"><a class="nav-link" onclick="loadContent('/Usuarios/Index')"><i class="fas fa-users"></i><span>Usuarios</span></a></li>
                }
                <li class="nav-item">
                    <form id="logoutForm" asp-controller="Account" asp-action="Logout" method="post">
                        <button type="submit" class="nav-link btn btn-link" onclick="handleLogout(event)"><i class="fas fa-sign-out-alt"></i><span>Cerrar Sesión</span></button>
                    </form>
                </li>
            </ul>
            <div class="mt-4">
                <h6 class="text-light">Configuración</h6>
                <select class="form-select mb-2" onchange="changeTheme(this.value)">
                    <option value="dark">Tema Oscuro</option>
                    <option value="neon">Tema Neón</option>
                    <option value="cyber">Tema Cyber</option>
                    <option value="light">Tema Claro</option>
                </select>
                <select class="form-select" onchange="changeSidebarPosition(this.value)" id="sidebarPositionSelect">
                    <option value="left">Izquierda</option>
                    <option value="top">Superior</option>
                </select>
            </div>
        </nav>

        <!-- Contenido Dinámico -->
        <div class="content" id="contentArea">
            @RenderBody()
        </div>

        <!-- Contenedor para Modales -->
        <div class="modal fade" id="dynamicModal" tabindex="-1" aria-labelledby="dynamicModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="dynamicModalLabel"></h5>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body" id="modalBody"></div>
                    <div class="modal-footer" id="modalFooter"></div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script>
        function loadContent(url, method = 'GET', data = null) {
            const options = {
                method: method,
                credentials: 'include',
                headers: { 'X-Requested-With': 'XMLHttpRequest' }
            };
            if (data) options.body = data;
            fetch(url, options)
                .then(response => {
                    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
                    return response.text();
                })
                .then(html => {
                    const parser = new DOMParser();
                    const doc = parser.parseFromString(html, 'text/html');
                    const content = doc.querySelector('.content');
                    if (content) {
                        document.getElementById('contentArea').innerHTML = content.innerHTML;
                    }
                    const scripts = doc.querySelectorAll('script');
                    scripts.forEach(script => {
                        const newScript = document.createElement('script');
                        newScript.text = script.textContent || script.innerHTML;
                        document.body.appendChild(newScript).parentNode.removeChild(newScript);
                    });
                })
                .catch(error => console.error('Error al cargar el contenido:', error));
        }

        function openModal(url, title, method = 'GET', data = null) {
            const options = {
                method: method,
                credentials: 'include',
                headers: { 'X-Requested-With': 'XMLHttpRequest' }
            };
            if (data) options.body = data;
            fetch(url, options)
                .then(response => {
                    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
                    return response.text();
                })
                .then(html => {
                    document.getElementById('dynamicModalLabel').textContent = title;
                    document.getElementById('modalBody').innerHTML = html;
                    document.getElementById('modalFooter').innerHTML = `
                        <button type="button" class="btn btn-neon" onclick="submitModalForm()">Guardar</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                    `;
                    const modal = new bootstrap.Modal(document.getElementById('dynamicModal'));
                    modal.show();
                })
                .catch(error => console.error('Error al cargar el modal:', error));
        }

        function submitModalForm() {
            const form = document.getElementById('modalBody').querySelector('form');
            if (form) {
                const formData = new FormData(form);
                const url = form.action;
                const method = form.method || 'POST';
                fetch(url, {
                    method: method,
                    credentials: 'include',
                    headers: { 'X-Requested-With': 'XMLHttpRequest' },
                    body: formData
                })
                    .then(response => {
                        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
                        return response.text();
                    })
                    .then(html => {
                        const parser = new DOMParser();
                        const doc = parser.parseFromString(html, 'text/html');
                        const content = doc.querySelector('.content');
                        if (content) {
                            document.getElementById('contentArea').innerHTML = content.innerHTML;
                            bootstrap.Modal.getInstance(document.getElementById('dynamicModal')).hide();
                        }
                    })
                    .catch(error => console.error('Error al enviar el formulario:', error));
            }
        }

        function toggleSidebar() {
            const sidebar = document.getElementById('sidebar');
            sidebar.classList.toggle('collapsed');
            const brandText = sidebar.querySelector('.brand span');
            const brandIcon = sidebar.querySelector('.brand i');
            if (sidebar.classList.contains('collapsed')) {
                brandText.style.display = 'none';
                brandIcon.style.display = 'inline';
            } else {
                brandText.style.display = 'inline';
                brandIcon.style.display = 'none';
            }
        }

        function changeSidebarPosition(position) {
            const sidebar = document.getElementById('sidebar');
            const container = document.getElementById('dashboardContainer');
            sidebar.classList.remove('left', 'top');
            sidebar.classList.add(position);
            container.style.flexDirection = position === 'top' ? 'column' : 'row';
            localStorage.setItem('sidebarPosition', position);
            if (sidebar.classList.contains('collapsed')) toggleSidebar();
            updateSidebarPositionSelect(position);
        }

        function applySidebarPosition(position) {
            const sidebar = document.getElementById('sidebar');
            const container = document.getElementById('dashboardContainer');
            sidebar.classList.remove('left', 'top');
            sidebar.classList.add(position);
            container.style.flexDirection = position === 'top' ? 'column' : 'row';
            updateSidebarPositionSelect(position);
        }

        function updateSidebarPositionSelect(position) {
            const select = document.getElementById('sidebarPositionSelect');
            select.value = position;
        }

        function changeTheme(theme) {
            const body = document.body;
            body.classList.remove('theme-dark', 'theme-neon', 'theme-cyber', 'theme-light');
            body.classList.add(`theme-${theme}`);
            localStorage.setItem('theme', theme);
            adjustChartColors(theme);
        }

        function applyTheme(theme) {
            const body = document.body;
            body.classList.remove('theme-dark', 'theme-neon', 'theme-cyber', 'theme-light');
            body.classList.add(`theme-${theme}`);
        }

        function adjustChartColors(theme) {
            if (window.ventasChart) {
                const colors = theme === 'light' ?
                    { text: '#333', bgVentas: 'rgba(0, 123, 255, 0.7)', borderVentas: '#007bff', bgGanancia: 'rgba(40, 167, 69, 0.7)', borderGanancia: '#28a745' } :
                    { text: '#e0e0e0', bgVentas: 'rgba(84, 186, 185, 0.7)', borderVentas: '#54BAB9', bgGanancia: 'rgba(233, 69, 96, 0.7)', borderGanancia: '#e94560' };
                ventasChart.options.scales.y.ticks.color = colors.text;
                ventasChart.options.scales.x.ticks.color = colors.text;
                ventasChart.options.plugins.legend.labels.color = colors.text;
                ventasChart.data.datasets[0].backgroundColor = colors.bgVentas;
                ventasChart.data.datasets[0].borderColor = colors.borderVentas;
                ventasChart.data.datasets[1].backgroundColor = colors.bgGanancia;
                ventasChart.data.datasets[1].borderColor = colors.borderGanancia;
                ventasChart.update();
            }
        }

        function handleLogout(event) {
            event.preventDefault();
            const form = document.getElementById('logoutForm');
            const formData = new FormData(form);
            loadContent('/Account/Logout', 'POST', formData);
            setTimeout(() => window.location.href = '/Account/Login', 500);
        }

        document.addEventListener('DOMContentLoaded', () => {
            const savedTheme = localStorage.getItem('theme') || 'dark';
            const savedPosition = localStorage.getItem('sidebarPosition') || 'left';
            applyTheme(savedTheme);
            applySidebarPosition(savedPosition);
        });
    </script>
    @RenderSection("Scripts", required: false)
</body>
</html>