@model ProStocker.Web.Models.UsuariosViewModel
@{
    ViewData["Title"] = "Usuarios";
    Layout = "~/Views/Shared/DashboardShell.cshtml";
}

<div class="content">
    <h1 class="mb-4" style="color: #54BAB9; text-shadow: 0 0 10px rgba(84, 186, 185, 0.7); font-size: 2rem;">Usuarios</h1>

    <div class="card p-3 shadow-lg">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h5 class="text-light"><i class="fas fa-users"></i> Lista de Usuarios</h5>
            <button class="btn btn-neon" onclick="openModal('/Usuarios/Create', 'Crear Nuevo Usuario')">
                <i class="fas fa-plus"></i> Nuevo
            </button>
        </div>
        <div class="table-responsive">
            <table class="table table-dark table-hover">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Nombre</th>
                        <th>Usuario</th>
                        <th>Tipo</th>
                        <th>Sucursales</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var usuario in Model.Usuarios)
                    {
                        <tr>
                            <td>@usuario.Id</td>
                            <td>@usuario.Nombre</td>
                            <td>@usuario.UsuarioNombre</td>
                            <td>@usuario.TipoId</td>
                            <td>
                                @{
                                    var sucursales = ViewBag.Sucursales as List<Sucursal>;
                                    if (sucursales != null && usuario.Sucursales.Any())
                                    {
                                        @string.Join(", ", usuario.Sucursales.Select(s => sucursales.FirstOrDefault(suc => suc.Id == s)?.Nombre ?? s.ToString()))
                                    }
                                    else
                                    {
                                        @:Sin sucursales
                                    }
                                }
                            </td>
                            <td>
                                <button class="btn btn-neon btn-sm" onclick="openModal('/Usuarios/Edit/@usuario.Id', 'Editar Usuario')">
                                    <i class="fas fa-edit"></i> Editar
                                </button>
                                <button class="btn btn-danger btn-sm" onclick="confirmDelete('/Usuarios/Delete/@usuario.Id', @usuario.Id)">
                                    <i class="fas fa-trash"></i> Eliminar
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function confirmDelete(url, id) {
            document.getElementById('dynamicModalLabel').textContent = 'Confirmar Eliminación';
            document.getElementById('modalBody').innerHTML = `<p>¿Estás seguro de que quieres eliminar al usuario con ID ${id}?</p>`;
            document.getElementById('modalFooter').innerHTML = `
                <button type="button" class="btn btn-neon" onclick="deleteUser('${url}')">Eliminar</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
            `;
            const modal = new bootstrap.Modal(document.getElementById('dynamicModal'));
            modal.show();
        }

        // Mostrar notificaciones desde TempData
        @if (TempData["Notification"] != null)
        {
            <text>
                const notification = @Html.Raw(TempData["Notification"]);
                showNotification(notification.message, notification.type);
            </text>
        }
    </script>
}